To set status.podIP to status.hostIP when spec.hostNetwork is true, you can modify the second snippit of code as follows:

if !c.enableCNI {
// Recycling PodIP
if pod.Status.PodIP != "" && c.cidrIPNet.Contains(net.ParseIP(pod.Status.PodIP)) {
if pod.Spec.HostNetwork {
pod.Status.PodIP = pod.Status.HostIP
}
c.ipPool.Put(pod.Status.PodIP)
}
} else {
err := cni.Remove(context.Background(), string(pod.UID), pod.Name, pod.Namespace)
if err != nil {
logger.Error("cni remove", err)
}
}

In the above code, we have added a condition to check if spec.hostNetwork is true. If it is true, then pod.Status.PodIP is set to pod.Status.HostIP.

To set status.podIP to status.hostIP in the YAML file, you can use the following snippet:

hostIP: {{ if .spec.hostNetwork }}{{ .status.hostIP }}{{ else }}{{ .NodeIP }}{{ end }}

In the above YAML file snippet, we have added a condition to check if spec.hostNetwork is true. If it is true, then hostIP is set to status.hostIP, otherwise it is set to NodeIP.
