// Code generated by go-bindata.
// sources:
// admin_http_assets/app.css
// admin_http_assets/app.js
// admin_http_assets/index.html
// DO NOT EDIT!

package web

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _admin_http_assetsAppCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8a\xce\x4b\x8f\xb1\x4a\xce\xc9\x4f\xcc\x8e\xd5\x51\x88\xce\x4b\xd7\x85\xb3\x53\x12\x4b\x12\x75\x91\x05\x2a\x90\x79\x7a\x30\xb6\x8e\x82\x1e\x42\x02\x22\x9e\x91\x99\x92\xaa\x50\xcd\xa5\xa0\xa0\xa0\x90\x92\x59\x5c\x90\x93\x58\x69\xa5\x90\x97\x9f\x97\xaa\xa0\x98\x99\x5b\x90\x5f\x54\x92\x98\x57\x62\xcd\x55\x0b\x08\x00\x00\xff\xff\x9c\x9e\x21\xb0\x7a\x00\x00\x00")

func admin_http_assetsAppCssBytes() ([]byte, error) {
	return bindataRead(
		_admin_http_assetsAppCss,
		"admin_http_assets/app.css",
	)
}

func admin_http_assetsAppCss() (*asset, error) {
	bytes, err := admin_http_assetsAppCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin_http_assets/app.css", size: 122, mode: os.FileMode(436), modTime: time.Unix(1482338362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _admin_http_assetsAppJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\xdf\x6f\xdb\xb6\x13\x7f\xf7\x5f\x71\x10\x02\x48\x42\x55\x39\xdf\xef\xc3\x80\x29\x30\x3a\xaf\x5b\xb1\x3e\x04\x18\xb2\x6e\x7b\xc8\x5c\x80\x91\xce\x8c\x60\x9a\x14\x48\xca\xb1\xe1\xea\x7f\x1f\x48\xfd\xa2\x68\x37\x4d\x93\x6e\xd3\x4b\x2c\xf2\x7e\x7c\xee\xc3\xbb\xe3\x29\x3b\x22\x81\x54\x15\x2c\x80\xe3\x03\x10\x4e\x6b\x46\x64\xba\x15\x45\xcd\x30\x0a\x72\x22\xef\x04\x7f\x2d\x91\x91\xc3\x6b\x4e\x83\x04\x6e\x03\x4e\x6f\x50\x89\x5a\xe6\x18\x24\x10\xd4\x65\x7a\x27\x84\x56\x5a\x92\x2a\x58\xc5\x57\xb3\x19\xa9\xaa\x34\x17\x5c\x4b\xc1\x18\xca\x28\xb8\x26\x25\x7f\xab\x99\xd5\xbd\x50\xb9\xa8\xac\xde\x85\x74\x8c\x5c\x6c\x45\x41\x8c\xc4\xba\xe6\xb9\x2e\x05\x8f\x5a\xc1\x04\x06\xb1\x04\x5a\xa1\xf8\x38\x03\x68\x77\x53\xc2\x50\x6a\x05\x0b\xb8\x5d\x5d\xcd\x00\x4c\x28\x6f\x05\x5f\x97\x14\x16\xa3\x62\x14\xcc\x73\xbb\x38\x0f\xe2\x5e\xea\x03\xb9\x63\xe8\x09\x69\xb3\xe6\xc8\xdc\xe0\x83\x2c\x35\x4a\x4f\x4c\x76\xcb\x6a\x9e\x95\xbc\xc0\xfd\xa8\xf0\x23\x23\xf9\x86\x95\x4a\x7b\x1a\x77\xfd\xfa\xa9\xca\x92\x52\x89\x94\x68\xe1\x7b\x21\xc3\xc6\xa9\xd2\x8d\xa8\xb5\x0f\x5e\x9a\x35\x35\xcf\x36\x78\x08\x12\x38\x6e\xf0\x90\x41\xf8\xc3\x06\x0f\x61\x93\xc0\xb1\x19\x74\x7f\x42\xa5\x4b\x4e\x0c\xc5\x9f\xb7\x30\x2f\x46\x29\xd7\xfd\x6c\x64\x7e\x47\x58\x59\x2c\x8b\x42\xa2\x32\xfc\xcf\x3f\xde\x7e\xcc\x56\xaf\xfe\xca\x6e\x2f\x5f\x7f\xbf\x7a\x15\x65\xf6\x35\x7e\x73\x31\xbf\xf2\x74\x2c\xf8\x0f\x87\x0a\xad\x56\xa4\x90\x17\xd1\x92\xb1\x4f\xef\x4a\xa9\x74\x7c\x4d\x74\x7e\x1f\x7f\x8a\x72\xc1\x55\xa9\x34\x72\xfd\x0b\x51\xf7\x25\xa7\xf1\xdc\xb7\x83\x14\xf7\xb0\x80\x68\xc8\x98\x18\x4c\x66\x98\x47\xa2\xae\x25\x1f\x5e\xcd\xa3\x51\xe9\x6c\xcc\xae\x1d\x61\x35\xc6\x13\x09\xf3\x18\x86\x4a\xf5\x87\xb1\x0f\x0b\xd0\xb2\xc6\x2b\x4f\x42\xcb\xc3\x89\x16\xd8\xca\xb9\x41\xfa\xf3\xbe\xea\x2c\xfb\x6a\x0d\xe4\x26\xb2\xe8\x8c\x4f\x70\x3c\xae\x09\x53\x27\x2e\x1b\xef\xbd\x8b\xae\xd3\x72\xa5\x7b\xc9\xc6\x2c\x36\x71\x64\x8e\xcc\x3b\x31\x4a\xdf\xd5\x3c\xff\xd6\xbc\x95\x6b\x68\xb7\x60\xb1\x80\x40\xd5\xdb\xe0\x5c\x9c\x83\x83\x73\xc4\xfa\x51\x4e\x4d\x92\x1d\x7d\xb9\xc9\x4e\xf4\x84\xe4\x47\x69\xeb\xea\x79\x60\xa0\x2c\xf6\x71\x8b\xc3\xf6\x90\x94\xa2\x1e\xa9\x2c\x88\x26\x71\x8f\xb2\x33\xa0\xbb\x56\x63\xf6\x5a\xaf\x6d\x35\x36\xbe\x97\xc8\x2e\xb7\xfd\x6b\x6a\x36\x5f\xd3\x3e\xf8\x4e\x3e\xef\xbb\x5c\xbe\xa6\x2d\x6a\xd7\x1a\xc7\x07\xa7\x79\xb5\xc9\xd9\xbe\xb6\x3e\xfa\xee\x59\x14\x8e\xd8\x49\x3e\x9c\xef\xb1\xe7\x9c\xa4\x17\x8a\xec\x30\x8a\x53\x7d\x8f\x7c\x84\x2d\x51\x55\xe3\xa1\x3d\x11\x9b\x23\x3a\x92\x02\xd0\x24\x83\x59\x94\xf2\xc4\xea\x08\xf2\xb8\x55\x34\x03\x94\x32\x35\x84\xa7\x28\xa5\x90\xcd\xca\x23\x7e\xd0\x93\xb8\x15\x3b\x3c\xc7\xc2\x78\xce\x26\x13\x2d\xdf\x72\x1b\x85\x4b\x89\x70\x10\x35\xa8\xba\xfb\xf1\x40\xb8\x06\x2d\xa0\x40\x86\x1a\xa1\xbf\x1d\x00\xb9\x69\x15\x5c\xa4\x10\xc2\x2b\x30\xd6\x46\xd0\x03\x6f\xad\x52\x74\x0c\x6d\x8b\x0d\xb3\xb2\xd8\x37\x8f\xb2\xe0\xe7\x0d\xc7\x87\x25\xa5\x1d\x91\xe3\x65\x12\x1d\x4d\x87\xcd\x20\x20\xd4\x5c\xd9\xef\xb9\x46\xb9\x23\x2c\xfb\xee\x32\x81\x3f\x49\xa9\x33\xf8\xdf\xff\x2f\x1b\x2f\x17\x26\x77\xd1\x33\xb2\x61\x49\xe9\x57\x26\xc2\xb2\x28\x5e\x02\xfd\xbf\x48\x95\xf3\x24\x3d\x33\x59\xc6\x4b\xfe\xd1\x74\x19\x7d\x7e\x93\x84\xe9\xc7\x07\x5b\x7b\xe6\x77\x74\xfc\xb5\xcc\x37\x0c\xb3\xb6\x35\x26\xf0\x5b\x25\x04\xcb\x6c\x4f\x4d\xc0\xdb\xeb\x4e\xc7\xdc\xdb\x4b\xc6\xec\x7d\x1d\xf8\x99\xd4\x7b\x78\x4e\x4b\x31\xaa\x5f\xdb\x4f\xfe\xa1\x80\xfe\x95\xfc\x1a\x89\x33\x31\xbb\xa4\xd9\x81\xec\x4b\xcc\xb5\x7c\x59\xba\x8e\x4d\x02\x56\x27\x99\x10\x3f\x8d\x00\x9a\xa4\x85\xeb\xc5\xf0\x64\xf4\xe7\x90\xb7\xa5\xe1\x8e\xbf\x2f\xad\x8c\x61\x64\x7e\xb4\x30\x06\x8f\x2f\xaf\x8b\xee\x22\xf0\x13\x77\x83\x87\x2f\xc1\x7f\x13\xba\x9d\xdd\x1e\xc7\x80\xc6\xcc\xdf\x66\xa0\x7e\x0e\x96\xe9\xa4\xee\x22\x4a\xe0\x09\xac\x4e\x60\xb9\x63\xff\x29\xba\x04\x9e\x4d\x9b\xa8\x90\xfb\xa4\x81\x3d\xf4\xce\xb7\x99\xa8\xed\x67\xdb\x7b\xae\x34\xe1\xb9\xfd\x6e\xb1\x0b\x56\x37\xea\x11\x6a\xdc\x56\x8c\x68\xfc\x5d\xb2\x0c\xc2\xba\x2a\x88\x6e\x4f\xe3\xda\xca\xde\xeb\x2d\x0b\xbb\xcc\x85\x0d\x1e\xee\x04\x91\x45\x5f\xc2\xdd\xf2\xf8\xc9\x99\x39\x58\x86\xef\xc8\x09\x8a\xae\x52\xdc\x91\xb2\x27\xbf\x8b\xc6\xfe\xbd\xf2\x77\xc5\x66\x12\xe8\x74\x24\x9d\xba\x48\x73\x26\x14\x46\xae\x59\xe7\xb3\xa0\x39\x31\x9d\x1b\x25\xf6\x74\xf3\x45\xa9\xb6\xa5\x52\x51\xd8\x2a\x86\xe7\x8c\xf7\xc5\x0e\xd6\x45\xd6\xb9\x4a\x86\x71\x5f\x09\xb6\xc3\xcc\xf1\x62\x61\x66\x9f\x85\xd0\x4d\xd0\xfd\x3f\x09\x72\x51\x1d\x26\x01\xaa\xdb\xb2\xd8\xaf\x5c\x24\x33\xf7\x6f\x37\xa5\xc2\x34\x23\x52\x89\xaa\x66\x7a\xda\xec\x21\xf2\x0e\xc8\x69\x92\x91\x4b\xe6\xd8\x8e\x1a\xe3\xf8\xef\x00\x00\x00\xff\xff\x0c\x69\x41\x3c\xce\x10\x00\x00")

func admin_http_assetsAppJsBytes() ([]byte, error) {
	return bindataRead(
		_admin_http_assetsAppJs,
		"admin_http_assets/app.js",
	)
}

func admin_http_assetsAppJs() (*asset, error) {
	bytes, err := admin_http_assetsAppJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin_http_assets/app.js", size: 4302, mode: os.FileMode(436), modTime: time.Unix(1482338362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _admin_http_assetsIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x3b\x7b\x6f\xdb\xb6\xf6\xff\xf7\x53\x30\xc2\x80\xb4\xf8\x55\x52\xe2\x6e\xd8\x16\xd8\x06\xb2\xae\xfd\xad\xf7\xae\x6b\x91\x6e\xf7\x81\x61\x77\xa0\xc5\x63\x89\x09\x45\xaa\x24\xe5\x24\x37\xd8\x77\xbf\x38\x94\x64\xc9\xb2\x1e\x76\xf3\x6a\xf3\x47\xcc\xc7\xe1\xe1\x79\xf2\x1c\x92\xe2\xf4\xe0\xc7\x77\x2f\x7f\xfd\xf7\xfb\x57\x24\xb1\xa9\x98\x3f\x99\xe2\x0f\x11\x54\xc6\x33\x0f\xa4\x47\x64\xec\xd3\x2c\x9b\x79\x11\xd5\x0b\x25\x7d\x0d\x82\x5e\xfb\x32\xf6\x10\x12\x28\x9b\x3f\x21\x64\x9a\x82\xa5\x24\x4a\xa8\x36\x60\x67\x5e\x6e\x97\xfe\x77\x5e\xdd\x91\x58\x9b\xf9\xf0\x31\xe7\xab\x99\xf7\x2f\xff\xb7\x53\xff\xa5\x4a\x33\x6a\xf9\x42\x80\x47\x22\x25\x2d\x48\x3b\xf3\xde\xbc\x9a\x01\x8b\xa1\x31\x4e\xd2\x14\x66\xde\x8a\xc3\x65\xa6\xb4\x6d\x80\x5e\x72\x66\x93\x19\x83\x15\x8f\xc0\x77\x95\xe7\x84\x4b\x6e\x39\x15\xbe\x89\xa8\x80\xd9\xf1\x16\x1a\x06\x26\xd2\x3c\xb3\x5c\xc9\x06\xa6\x2d\x30\x9a\xdb\x44\xe9\x2d\x08\xc1\xe5\x05\xd1\x20\x66\x1e\x8f\x10\x41\xa2\x61\x39\xf3\x82\x20\x0c\x82\x70\x49\x57\xd8\x18\xf0\x48\x79\xf3\x27\x08\x6d\xb9\x15\x30\x7f\x59\x08\xec\xcc\x09\xec\x97\xff\x27\x94\xa5\x5c\x4e\xc3\xa2\xd3\xc1\x1d\xf8\x3e\xf9\x99\x5a\x30\x96\x44\x2a\xcd\xb8\x00\x46\xa8\x64\x24\xe5\x92\x2f\x39\x30\xf2\xf2\xc3\x07\xe2\xfb\x2d\x0a\x8c\xbd\x16\x60\x12\x00\x5b\xd1\x11\x86\x29\xbd\x8a\x98\x0c\x16\x4a\x59\x63\x35\xcd\xb0\x12\xa9\x34\x5c\x37\x84\x2f\x82\x49\x70\x14\x46\xc6\xd4\x6d\x41\xca\x65\x10\x19\xe3\xd5\xd4\xbc\x73\x02\xa2\x82\xd8\x04\x52\xb8\xc7\xb9\x7d\x37\x41\x8b\x82\xc1\x79\x68\x96\xb5\x88\xfd\xe9\xd7\xb7\x3f\x7f\x43\x4c\xc2\x53\x27\xb5\x33\x30\x99\x92\x2c\x38\x37\xe4\xcd\xab\xef\x88\xc9\x33\x34\x1b\xa2\x96\x25\x20\x08\x48\x41\x5a\x53\x88\x18\x18\xa7\xe4\x63\x0e\x9a\x83\xa9\xf8\x3c\xf0\xfd\xdf\xf9\x92\x08\x4b\xde\xbc\x22\xdf\xff\xe1\xda\x0a\xab\x21\x46\x47\x33\x0f\x0d\xd9\x9c\x84\xa1\x32\x26\x28\xb9\x46\x46\xd1\x61\xbe\x31\x09\x5f\x85\x2f\x82\x6f\x83\x49\x5d\x77\xec\x9d\x1b\x6f\x3e\x0d\x0b\x34\xbb\x62\xd4\x05\x2b\xe1\x71\xf0\x75\x30\xa9\x6a\xdd\xd8\x0e\x7e\x07\xc9\xf8\xf2\x0f\x64\x61\x1a\x16\x1e\xf9\x64\xba\x50\xec\x9a\x68\x25\xd0\xf0\x55\x94\x23\xdf\x1e\xa9\x25\xf7\x9a\x5f\x01\x23\x92\xae\x16\x54\x57\xcc\x33\xbe\x22\x91\xa0\xc6\xcc\xbc\xb2\xa3\xf8\xf1\xb9\x5c\x81\x36\xe0\x95\xf8\x24\x5d\xf1\x98\x3a\x3f\xc2\x71\x9b\x23\xd1\x6d\x28\x97\xa0\xcb\xbe\x2e\xbc\x3e\x12\xd9\x80\x20\x64\x4a\x5b\x10\x0b\x4d\x25\x5b\x6b\xde\x6b\xbb\xd2\x34\xa4\x6b\xf4\x21\xe3\xab\x81\xb9\x22\x25\x04\xcd\x0c\x90\xaa\xd0\x9c\x36\x17\x0d\xe8\x8a\x5d\x49\x57\x0d\x18\x67\x95\x15\x14\x8d\x2c\x5f\xc1\x46\xaf\x23\x7e\x4d\xe7\x4f\x2a\x85\x06\x71\x05\x81\x82\xb7\xd0\xf5\x8d\x5f\x50\xf6\x16\xac\xe6\x91\x09\x27\x5f\x27\xc1\xb9\x41\x11\xff\x40\xd1\x58\x5d\xeb\x20\xe6\x69\x98\x8b\x6e\xa1\x1c\xf8\x7e\x18\x48\xba\xaa\x65\xe1\xfb\xf3\x1a\xa6\x2c\x3c\xe9\x53\x64\xa9\xf6\x94\xf2\x22\x18\x60\x8f\x56\x42\x80\x9e\x79\x6f\x29\x97\x2f\xad\x68\x18\x42\x97\x2a\xb4\xba\x2c\x46\x0a\x45\x2f\x9a\x5a\x17\xa0\x2d\x76\x68\xc8\x80\xda\x99\x57\x34\x70\x49\x5c\xc1\x78\xf3\x9b\x1b\x57\x0a\x52\x13\xff\xf5\xd7\x34\x74\x95\x06\x82\x0d\x7a\x85\x9f\x32\xff\x78\xb2\xa9\xbb\x64\x32\xff\x07\x15\x9c\x39\x7b\x9d\x86\xc9\xa4\x25\x7b\x4b\x17\x02\x2a\x1c\x45\xc5\xfd\x47\x2e\x19\x48\x03\xac\xa5\x6d\x1c\x53\x85\xbd\x76\xbb\xde\x6e\x74\xe0\xa5\xf9\x4e\x43\x9b\xf4\x41\x94\x7a\x27\x93\xe0\x68\x08\xac\xe4\x05\x88\xd2\x0c\x74\x37\xe4\x34\xdc\x26\x04\x21\x3b\x88\x9e\x5a\x5c\x27\xf6\x60\x85\xcd\x6f\x6e\x22\x25\x97\x3c\x0e\x6a\xb1\xfe\x29\x60\x05\xe2\x4f\x01\x31\x8d\xae\x51\x4d\xb6\x43\x3a\x63\xa3\xd3\xc9\xd1\x7e\x43\xe1\x4f\x27\x83\xbe\x41\x3d\x52\x68\xf3\x3b\x0d\x9d\xba\x9b\x6e\xd4\x30\xe2\x5d\x4c\xac\x30\xb2\x1f\x04\x8d\x2e\x04\x37\xf6\xd1\x6c\xec\x2d\xb5\x51\x42\x32\x0d\x4b\x7e\x35\x68\x69\x0e\xce\xe4\x0b\x63\x35\x97\xf1\x38\xa8\x86\x18\x06\x31\x9e\x46\xa8\x47\x73\x47\xd6\xd8\x5c\x0f\x16\xb8\x16\x38\x59\x05\x8b\x4a\xc0\x5b\xb2\xea\x95\x4a\x65\x37\x8b\xa0\x90\x4a\xbf\x7d\xd5\x90\x6b\xb9\xec\x02\xec\x24\x33\x02\xb8\xd6\x3b\x5c\x59\x3f\x02\x69\x31\xf0\x4d\x69\xb1\x1c\xf2\xe8\x62\xe6\x69\x48\xd5\x0a\xd6\x06\xf4\xf4\x2b\x2e\x19\x5c\x3d\xf3\xe6\xd3\x75\xdc\x89\xc5\x75\x96\x60\x8e\x49\xd6\x25\xbf\x18\xe6\x47\x5c\x47\x02\xbc\x70\x8e\xc1\xe1\x56\xae\xd0\xe1\x0c\xa4\xb4\xee\x33\xb8\xd4\xdc\x82\x36\x1d\xd6\xbd\x54\x3a\x2d\x73\x67\x5d\x82\xbd\x56\x3a\xf5\x2a\xda\xb1\xdf\xa7\x8c\x11\x57\x88\xb5\xca\x33\x92\x50\xe3\x2f\x01\xd8\x82\x46\x17\x55\x7c\x59\xba\x41\x32\xf6\x4d\xbe\x48\x39\x06\x03\xc6\xaa\x79\x9f\x3e\xf3\x88\x54\xab\xd2\xf1\x1f\xc5\xbd\xde\x09\x36\xe4\x03\xbf\xc0\xe5\xb0\x27\x3d\x92\x07\xe9\xda\x83\x2a\xed\x98\xfd\x3d\x48\x07\x4a\xb0\x71\x8f\xd0\x81\x84\xcb\x5d\xc0\x52\x7a\x57\x6e\xb3\xb6\x90\xc7\xf3\x1a\xb2\x7f\x20\xdd\x60\xb1\xcf\x2f\xba\x07\xba\xc1\x5c\x66\xb9\x4b\x9c\x52\xc5\x70\xb7\x24\xe1\xb2\x12\x44\xf0\x4e\x30\xaf\xf4\x47\x85\xc5\xe6\x2c\x65\xea\xe6\x91\x4c\xd0\x08\x12\x25\x18\x26\x71\x0e\x4c\xe3\xfe\x5c\x43\x8f\x46\x48\x15\x0a\xd1\x3f\x13\x75\xb9\xe9\xeb\x68\x1d\xc1\x57\x5c\x3a\x07\x1d\xa0\xdb\x61\x31\x19\x95\x43\x68\x40\x6b\xa5\x83\x8c\x5a\x0b\x5a\x7a\xf3\x57\x57\x19\x44\x16\x37\x2b\x4a\xfa\x90\x66\xf6\x9a\x54\x81\x0b\x31\x0d\x90\xbb\x19\xc8\x37\xbb\x76\xb0\xbc\x3b\x56\xcb\x2f\x70\x59\xa9\x45\x62\x71\x5c\x2d\x08\xf6\x18\xf4\xdb\xeb\x0c\x89\xcc\xd3\x05\x26\xff\xdd\xdc\xbc\xa5\x57\x15\x37\x29\x16\x3b\xb9\xb9\x95\x49\xa5\xf4\xea\x2e\x4c\xca\xa1\xe9\x33\x29\x4a\x0a\x2e\x89\x55\x84\x81\x54\x16\x48\x4a\xaf\x88\x06\xa7\x87\xe2\xac\xe0\x29\x25\x99\x32\x1c\xf7\x7d\x25\xf4\x73\xa2\x34\xf1\x8f\x31\x9e\x11\xa9\x88\xe0\x29\xb7\xcf\xee\xcb\x1a\x7b\x3a\x16\xb9\xb5\x4a\x56\x62\x5f\x58\x49\x16\x56\xfa\x26\x75\x3f\x99\xe6\x29\xd5\xd7\xae\xbc\x10\x0a\x43\x6c\xa1\xd3\x22\xb2\x3a\x9d\x32\x6e\x30\x28\xb0\x96\xb8\x6a\x89\x9f\x32\x36\x0d\x8b\x69\xf6\x21\xbb\x6b\xd5\xdc\x2b\xdb\x08\xd1\x86\xb6\x33\x90\xd3\x38\xd6\x10\x53\xab\xc6\x72\x10\x1a\xc7\x77\x96\x7e\xd4\x93\x7e\x06\x09\xc8\xeb\x5c\x46\xc5\x26\xb6\x3f\x8f\x38\x1b\x4b\xd5\xdf\xe5\x16\x5d\x1c\x99\xa5\x76\x08\xf0\x0d\x46\xdc\x15\x15\xe4\xa9\x81\xe8\xd9\x10\xe4\x3f\x29\xb7\xe3\x50\xf7\x97\xe1\xd0\x3a\xc3\xa1\xb5\x91\xec\x9f\xe3\xd0\x60\x99\xcb\xf1\xe4\x85\xee\x94\xf5\x3b\xc0\x77\xb9\x7d\x9d\xda\x5d\x20\x2b\x69\xef\x02\x8b\xf2\xbe\xa3\xe4\xa9\x61\xdf\xb7\x4e\x9f\x6e\xb3\x12\x90\xcf\x22\x83\x3a\x8d\xe3\xe0\x75\x2e\xab\xb8\xb6\xc4\xe2\x78\x94\xae\xdc\xb2\x0e\x77\x88\xb5\x8c\x35\x33\xcf\x2d\x19\xa7\x71\x8c\x60\x43\xf4\x6c\x04\xc2\x72\x0d\x43\x83\xfc\xc4\x18\xb8\x81\xa1\x37\xfc\x95\xea\xe7\x4a\x92\x65\xc9\xc6\x09\x31\x79\x8a\x01\x8e\xae\xbe\x90\x0c\x0b\xd5\xe6\xd6\x3d\x6f\xbd\x0b\x75\x95\x71\xd5\x95\x80\x5b\xea\x2a\xb0\xed\xab\x2c\x87\xed\x96\xea\x2a\x71\xf4\x29\xcc\x61\x26\x1a\xe2\x5c\x50\x4d\xe0\x2a\xd3\x60\x8c\x0b\x09\x5f\x8a\xa2\x8a\x25\x71\xbd\x3f\xc9\xed\x12\x6b\x3b\x6c\x51\x72\x3b\x96\x4f\x3e\x5a\x52\x8c\x7c\x55\x0b\x78\xc5\x19\x5f\xd7\x3b\x79\x6b\x9a\x5c\xf8\x9f\xdf\x8f\xfc\xef\xff\xf8\xbf\xaf\xc2\xbd\x4d\xae\x9a\xe5\x96\x56\x57\xa3\x19\x4d\x94\x9f\x72\x49\x0c\x60\x5e\x63\x9e\x35\xb2\xe6\x8f\x39\x95\x96\xff\x97\xcb\x98\x54\xc8\x3e\x5b\x9b\x1c\xd1\x24\x86\xd7\x4a\x8b\x97\xae\x7c\x9f\x1a\xc4\x19\x6e\xa9\xbd\x02\xc5\xa7\x6a\x0e\xf7\x3b\x88\xe1\xcb\xdd\xbf\x54\x72\xf8\x6c\xb7\x2e\x67\x2a\xb7\xee\xbc\x62\xf0\xe8\x54\xe5\x16\xee\xee\xdc\x14\xb1\x3d\xf2\x9e\xa5\xc8\xfb\x5d\xc2\x5f\xdc\x39\x5f\xc2\xa1\x10\x04\x5d\x10\x53\x49\x43\x12\xd0\xd5\x07\x06\x5d\x23\x1d\x0f\xe4\x02\xae\x07\x37\x3c\x0e\x08\xad\x63\xfc\x1e\xe3\x51\xae\x46\x18\xc3\x18\x3d\x04\xf2\x21\x53\x4a\x0c\x01\xbc\xe7\xd1\x85\x18\xe2\x8f\x44\x4a\xa0\xf7\xce\x26\xe4\x81\x4e\x92\x51\xea\x7b\x6c\xb1\x70\x1d\x28\x56\xaf\x81\xad\x45\x26\xe8\xb5\x47\xa8\xe6\xd4\x4f\x38\x63\x20\x67\x9e\xd5\x39\xb8\xaf\x1d\x70\x69\x1a\xb8\x1b\xac\xd0\x72\xb9\x54\x9e\x3b\x60\xbe\x80\xe1\x8b\xc8\xed\x11\x68\x43\x7b\x0e\x49\xd1\x06\x40\x8f\xde\x2e\x0d\x0e\xde\xe1\xc2\x69\x70\xfc\xc8\x6e\xb4\x3d\x76\x6d\x2b\xde\x0b\x6f\x67\x91\xd6\x83\x26\xdd\x87\xf0\x6e\xb9\x71\x52\xbf\xe7\x03\x78\x67\x62\x4d\xab\x64\x68\x95\x3a\x60\x60\x2c\x97\xcd\x8f\x52\x3a\x78\x9a\xe3\x32\x34\x6a\x87\x51\x02\x2b\x8d\x84\xf2\x38\xb1\x43\x06\xe9\xfb\xbd\x02\x2c\xa7\xfb\xf4\xde\x42\xc4\x8e\xc6\x9b\x43\x46\x65\x0c\xfa\xf0\x84\x1c\xb0\x40\x49\xc1\x25\x3c\x27\x87\xa8\x98\xc3\x13\x52\xb5\xfc\x85\x56\xc1\x76\x36\xc9\x3b\x99\x64\xd7\xbb\xd2\xdb\xce\xb3\xd3\x35\xeb\x27\xce\x41\x8b\x05\xfa\xee\xb1\x77\x9e\xc1\x74\xe3\x77\x06\xb8\xce\xeb\x58\x60\x30\x22\x78\x43\x36\x9a\x30\xe6\x85\x9d\x9e\x3b\xe0\xd1\x0d\x1e\x48\xc5\x04\xb9\x3f\x2e\x32\x17\xb6\x06\xd9\x50\x17\xbe\xe1\xb1\x7c\x28\x56\x86\x17\xb1\x1f\xeb\x25\xa4\x58\xca\x9e\x3f\xe6\x95\xe2\x27\x7c\x99\xf3\x10\x11\x76\xbf\x5d\x57\xe7\x85\x18\xc6\x8a\xe0\xef\x70\x5d\x6d\xb2\x7e\xbd\xce\x60\xe4\x02\xa9\x75\x6c\x53\x25\x86\x9d\xb3\x3e\x20\x13\x05\xe5\xa3\x5c\x6c\x10\x6f\x40\xb2\x53\x21\x5c\xfa\x38\x74\x64\xe8\x66\x70\x48\x7b\xa8\xda\xbc\x39\xab\x76\x0f\x8e\xa6\xf1\x0d\x65\xfb\xc6\xac\x35\xbc\x6f\x33\xd9\x24\xfe\xb9\xab\xbd\xe6\xda\xd8\xb2\xae\x34\xc1\xbc\x9e\x1b\x0b\xd2\xfe\x44\x4d\x32\x72\x49\xdb\xbb\xa5\x7c\x40\x15\xbe\x77\x71\xb2\x52\x62\x55\x1b\x57\x63\x09\xf9\xc8\xd4\x7f\xa8\x02\x70\xc5\x40\xa3\x61\x9c\x87\x1a\xf8\x91\xd9\xd8\x38\xbd\x3d\xdb\xf5\xf4\xf6\x6c\xef\xd3\xdb\x07\x64\xa9\xdc\xf7\x55\x4c\xad\xab\x7b\x2c\x73\x35\x8a\xad\xeb\x84\xb2\xe7\x21\x79\x2c\x0e\x60\xa2\x04\xa2\x8b\x85\xba\x6a\x7f\x16\x50\x58\x63\x91\xb6\x94\x96\xb8\x91\xc3\x6c\xf0\xfb\x99\x91\xfd\xbe\xcc\x53\xca\x25\x60\x33\x6b\xd9\x91\xf0\x9e\x88\x7c\xef\x67\x5f\xf5\xc2\xbd\xf3\xe9\xd7\xdd\x7f\x22\xd8\x3e\xf7\xda\xfc\xf8\xbc\xae\x34\xbe\x33\x5f\x7f\x7a\x7e\xe0\xfb\x24\x5c\x7f\x6a\xee\x4e\x83\xaa\xe6\x1f\xaa\x97\x22\x24\x52\x1a\xc8\xdf\xe8\x8a\x7e\x70\xaf\x1e\x1c\xb2\xd9\xde\x7f\x8d\x37\x1e\xe4\x3d\x3a\x1a\x23\xd4\x12\x9b\x00\x01\xc9\x88\x5a\xba\x62\xf5\x56\x82\x18\xe5\xea\x19\x8d\xc1\x10\xa1\x28\x23\x4b\x6a\x2c\xac\x1f\x4b\x74\xbd\xe1\xa0\xe7\xf4\x2a\x88\x95\x8a\x05\xd0\x8c\x1b\xf7\x90\x03\xdb\x42\xc1\x17\x26\x3c\xff\x98\x83\xbe\x0e\x8f\x83\xe3\xe3\xe0\xb8\xac\x8d\xbf\x0f\xd9\xfd\x75\xcd\x79\xfb\x61\xcf\x26\xde\x3e\xa2\x23\xc5\x20\xa0\xd2\x5d\x29\x9d\x9b\x40\xe9\x38\x3c\x0e\x26\xc1\xf1\x51\x58\x36\xee\xfe\x86\x65\x14\x95\xaf\xc1\xa8\x5c\x47\xb0\x0b\xdf\x11\x93\xe7\x26\x88\x84\xca\xd9\x52\x50\x0d\x2d\x71\x56\x28\x73\xee\xd7\x92\x38\x42\xe1\x1e\x85\xcd\x36\xdf\x66\xc2\x8c\xc8\xc2\x3d\x2d\xea\x23\xa7\x70\x3f\xdc\x00\x85\x32\xf6\x2d\xa4\x99\xa0\x16\x3c\xc2\xd9\xcc\xcb\x33\x46\x6d\x71\xfc\xf1\x56\x31\x2a\x82\xc4\xa6\xa2\xe3\x55\x4c\x8a\x9d\xed\x67\x2f\xd3\xe4\xc5\x66\xbf\x7b\x18\xe6\xcd\x7f\x73\x48\x89\xf3\xed\x13\x72\x73\xe3\x0a\xd5\x89\x56\xf2\x62\xc3\x99\x48\xeb\x18\x79\x79\x8b\x13\xe4\xad\xa3\xe2\x6d\x0e\x70\x3d\x68\xbe\x9f\x69\x00\xd4\x73\xb4\x1e\xcf\xd0\x05\x08\xa4\x60\xe6\x61\x14\xf3\xe6\xef\x8b\x58\x36\x0d\x5d\xcf\x06\x6c\x3b\x9c\x16\x9c\xe3\x80\x6a\x79\x76\x28\x76\xc9\xcf\xca\xdc\x75\x97\xf4\x60\x33\x95\x46\xa4\x2e\xf5\xed\xcb\xa2\x5b\xb9\x73\x03\x7e\xf8\xda\x76\xe8\xba\xb6\xfd\xe8\xa0\xff\x0d\xc2\x0e\x62\xa6\x8c\x69\xaf\x3e\x79\xde\x55\xcc\x38\xa0\x12\xb3\x43\xb1\x83\x98\x8f\x27\xdf\x06\x47\xc1\x51\x70\x7c\x32\x39\x3a\xfa\x7a\xf0\x13\x88\x8e\x9c\xa5\x43\xf0\x38\xf1\x3e\x82\x2f\xe0\x7b\x04\x7f\x42\x0e\x13\x65\xec\x49\xa6\xb4\x3d\xdc\x4f\xe8\xbd\xaf\xca\x0a\x3f\x58\x2a\xb5\x79\x12\xd2\x15\xd4\x31\x84\x33\x58\xd2\x5c\x58\xaf\x71\xda\x10\x51\x19\x81\x78\xfa\xcc\x9b\xbf\x14\xca\xc0\x76\xac\xee\x49\x10\xca\xcc\xa0\x95\x01\x2c\x37\x82\x7f\x63\x1a\x75\x81\x53\x14\x6b\x49\x7b\x8e\x8d\xa0\x5c\x05\xef\x7a\xed\x9b\x86\x45\xdc\x9f\x86\xc5\x83\xe0\xff\x05\x00\x00\xff\xff\xa3\x20\xf7\x4a\x21\x3c\x00\x00")

func admin_http_assetsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_admin_http_assetsIndexHtml,
		"admin_http_assets/index.html",
	)
}

func admin_http_assetsIndexHtml() (*asset, error) {
	bytes, err := admin_http_assetsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "admin_http_assets/index.html", size: 15393, mode: os.FileMode(436), modTime: time.Unix(1482338362, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"admin_http_assets/app.css":    admin_http_assetsAppCss,
	"admin_http_assets/app.js":     admin_http_assetsAppJs,
	"admin_http_assets/index.html": admin_http_assetsIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"admin_http_assets": {nil, map[string]*bintree{
		"app.css":    {admin_http_assetsAppCss, map[string]*bintree{}},
		"app.js":     {admin_http_assetsAppJs, map[string]*bintree{}},
		"index.html": {admin_http_assetsIndexHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
